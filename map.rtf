{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red29\green133\blue25;\red0\green0\blue0;\red110\green32\blue13;
\red186\green0\blue17;\red180\green0\blue98;\red48\green111\blue121;\red46\green13\blue110;\red68\green137\blue147;
\red77\green0\blue158;\red92\green38\blue153;\red32\green60\blue63;\red0\green11\blue255;}
{\*\expandedcolortbl;\csgray\c100000;\csgenericrgb\c11489\c52197\c9852;\csgenericrgb\c0\c0\c0;\csgenericrgb\c42974\c12454\c5281;
\csgenericrgb\c72768\c0\c6662;\csgenericrgb\c70682\c0\c38264;\csgenericrgb\c18769\c43699\c47289;\csgenericrgb\c18100\c5200\c43100;\csgenericrgb\c26518\c53646\c57619;
\csgenericrgb\c30278\c0\c61966;\csgenericrgb\c35900\c14900\c60100;\csgenericrgb\c12359\c23384\c24757;\csgenericrgb\c0\c4459\c99822;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab890
\pard\tx890\pardeftab890\pardirnatural\partightenfactor0

\f0\fs36 \cf2 \CocoaLigature0 //\cf3 \
\cf2 //  ViewController.m\cf3 \
\cf2 //  PWMapApp\cf3 \
\cf2 //\cf3 \
\cf2 //  Created by Student P_08 on 15/02/17.\cf3 \
\cf2 //  Copyright \'a9 2017 Pallavi Wani. All rights reserved.\cf3 \
\cf2 //\cf3 \
\
\cf4 #import \cf5 "ViewController.h"\cf4 \
#import \cf5 <MapKit/MapKit.h>\cf4 \
#import \cf5 <CoreLocation/CoreLocation.h>\cf4 \
\cf3 \
\cf6 @interface\cf3  \cf7 ViewController\cf3  ()\
\
\cf6 @end\cf3 \
\
\cf6 @implementation\cf3  ViewController\
\
- (\cf6 void\cf3 )viewDidLoad \{\
    [\cf6 super\cf3  \cf8 viewDidLoad\cf3 ];\
    \cf2 // Do any additional setup after loading the view, typically from a nib.\cf3 \
    \cf9 manager\cf3  = [[\cf10 CLLocationManager\cf3  \cf8 alloc\cf3 ]\cf8 init\cf3 ];\
    \cf9 manager\cf3 .\cf11 delegate\cf3  = \cf6 self\cf3 ;\
    \cf9 manager\cf3 .\cf11 desiredAccuracy\cf3  = \cf11 kCLLocationAccuracyBest\cf3 ;\
    \cf9 manager\cf3 .\cf11 distanceFilter\cf3  = \cf11 kCLDistanceFilterNone\cf3 ;\
    [\cf9 manager\cf3  \cf8 requestAlwaysAuthorization\cf3 ];\
    [\cf9 manager\cf3  \cf8 requestWhenInUseAuthorization\cf3 ];\
    [\cf9 manager\cf3  \cf8 startUpdatingLocation\cf3 ];\
    \
    [\cf6 self\cf3  \cf12 arrayofPlist\cf3 ];\
\}\
\
-(\cf6 void\cf3 )arrayofPlist\
\{\
    \cf10 NSBundle\cf3  *bundle = [\cf10 NSBundle\cf3  \cf8 mainBundle\cf3 ];\
    \cf10 NSString\cf3  *path = [bundle \cf8 pathForResource\cf3 :\cf5 @"cityPlist"\cf3  \cf8 ofType\cf3 :\cf5 @"plist"\cf3 ];\
    \cf9 arrayofCity\cf3  = [[\cf10 NSArray\cf3  \cf8 alloc\cf3 ]\cf8 initWithContentsOfFile\cf3 :path];\
    \cf6 if\cf3 (\cf9 arrayofCity\cf3 >\cf13 0\cf3 )\
    \{\
        [\cf6 self\cf3  \cf12 pointOnMap\cf3 ];\
    \}\
\}\
\
-(\cf6 void\cf3 )pointOnMap\
\{\
    \cf10 MKPointAnnotation\cf3  *point;\
    \cf6 for\cf3  (\cf6 int\cf3  i=\cf13 0\cf3 ; i<\cf9 arrayofCity\cf3 .\cf11 count\cf3 ; i++)\
    \{\
        point = [[\cf10 MKPointAnnotation\cf3  \cf8 alloc\cf3 ]\cf8 init\cf3 ];\
        point.\cf11 title\cf3  = [[\cf9 arrayofCity\cf3  \cf8 objectAtIndex\cf3 :i]\cf8 valueForKey\cf3 :\cf5 @"city"\cf3 ];\
        \cf11 CLLocationCoordinate2D\cf3  coordinate;\
        coordinate.\cf11 latitude\cf3  = (\cf11 CLLocationDegrees\cf3 )[[[\cf9 arrayofCity\cf3  \cf8 objectAtIndex\cf3 :i]\cf8 valueForKey\cf3 :\cf5 @"Latitude"\cf3 ]\cf8 doubleValue\cf3 ];\
        coordinate.\cf11 longitude\cf3  = (\cf11 CLLocationDegrees\cf3 )[[[\cf9 arrayofCity\cf3  \cf8 objectAtIndex\cf3 :i]\cf8 valueForKey\cf3 :\cf5 @"Longitude"\cf3 ]\cf8 doubleValue\cf3 ];\
        point.\cf11 coordinate\cf3  = coordinate;\
        \cf8 NSLog\cf3 (\cf5 @"%@"\cf3 ,point.\cf11 title\cf3 );\
        \cf8 NSLog\cf3 (\cf5 @"%lf"\cf3 ,coordinate.\cf11 latitude\cf3 );\
        \cf8 NSLog\cf3 (\cf5 @"%lf"\cf3 ,coordinate.\cf11 longitude\cf3 );\
       \cf2 // MKCoordinateRegion region = MKCoordinateRegionMakeWithDistance(coordinate, 500, 500);\cf3 \
        \cf2 //[_map setRegion:region];\cf3 \
        [\cf9 _map\cf3  \cf8 addAnnotation\cf3 :point];\
    \}\
\}\
- (\cf6 void\cf3 )didReceiveMemoryWarning \{\
    [\cf6 super\cf3  \cf8 didReceiveMemoryWarning\cf3 ];\
    \cf2 // Dispose of any resources that can be recreated.\cf3 \
\}\
\
\
- (\cf6 IBAction\cf3 )segmentValueChange:(\cf6 id\cf3 )sender \{\
    \cf10 UISegmentedControl\cf3  *segment = (\cf10 UISegmentedControl\cf3  *)sender;\
    \cf8 NSLog\cf3 (\cf5 @"%ld"\cf3 ,(\cf6 long\cf3 )segment.\cf11 selectedSegmentIndex\cf3 );\
    \cf6 if\cf3 (segment.\cf11 selectedSegmentIndex\cf3  == \cf13 0\cf3 )\
    \{\
        \cf9 _map\cf3 .\cf11 mapType\cf3  = \cf8 MKMapTypeStandard\cf3 ;\
    \}\
    \cf6 else\cf3  \cf6 if\cf3  (segment.\cf11 selectedSegmentIndex\cf3  ==\cf13 1\cf3 )\
    \{\
        \cf9 _map\cf3 .\cf11 mapType\cf3  = \cf8 MKMapTypeSatellite\cf3 ;\
    \}\
    \cf6 else\cf3  \cf6 if\cf3  (segment.\cf11 selectedSegmentIndex\cf3  ==\cf13 2\cf3 )\
    \{\
        \cf9 _map\cf3 .\cf11 mapType\cf3  = \cf8 MKMapTypeHybrid\cf3 ;\
    \}\
\}\
\cf6 @end\cf3 \
\
\
\
\
\cf2 //  ViewController.h\cf3 \
\cf2 //  PWMapApp\cf3 \
\cf2 //\cf3 \
\cf2 //  Created by Student P_08 on 15/02/17.\cf3 \
\cf2 //  Copyright \'a9 2017 Pallavi Wani. All rights reserved.\cf3 \
\cf2 //\cf3 \
\
\cf4 #import \cf5 <UIKit/UIKit.h>\cf4 \
#import \cf5 <MapKit/MapKit.h>\cf4 \
#import \cf5 <CoreLocation/CoreLocation.h>\cf4 \
\cf3 \
\
\cf6 @interface\cf3  ViewController : \cf10 UIViewController\cf3 <\cf10 CLLocationManagerDelegate\cf3 >\
\{\
    \cf10 CLLocationManager\cf3  *manager;\
    \cf10 NSArray\cf3  *arrayofCity;\
\}\
\cf6 @property\cf3  (\cf6 strong\cf3 , \cf6 nonatomic\cf3 ) \cf6 IBOutlet\cf3  \cf10 MKMapView\cf3  *map;\
\
- (\cf6 IBAction\cf3 )segmentValueChange:(\cf6 id\cf3 )sender;\
\
\
\cf6 @end\cf3 \
\
}